import pkg from 'whatsapp-web.js';
const { Client, LocalAuth, MessageMedia } = pkg;
import type { Message } from 'whatsapp-web.js';
import * as qrcode from 'qrcode-terminal';
import { Application, ManagerReply } from '../types/application-types.js';

export class WhatsAppService {
  private client: any;
  private thanksMessageSent: Set<string> = new Set();
  private onNewApplication?: (application: Application) => Promise<void>;
  private restartAttempts: number = 0;

  constructor() {
    this.client = new Client({
      authStrategy: new LocalAuth({
        clientId: "nord-laundry-whatsapp",
        dataPath: "./.wwebjs_auth"
      }),
      puppeteer: {
        headless: true,
        args: [
          '--no-sandbox',
          '--disable-setuid-sandbox',
          '--disable-dev-shm-usage',
          '--disable-accelerated-2d-canvas',
          '--no-first-run',
          '--no-zygote',
          '--disable-gpu',
          '--disable-web-security',
          '--disable-features=VizDisplayCompositor',
          '--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
        ]
      },
      webVersionCache: {
        type: 'remote',
        remotePath: 'https://raw.githubusercontent.com/wppconnect-team/wa-version/main/html/2.2412.54.html',
      },
      authTimeoutMs: 0,
      qrMaxRetries: 0,
      restartOnAuthFail: false,
      takeoverOnConflict: false,
      takeoverTimeoutMs: 0
    });

    this.setupEventHandlers();
  }

  private setupEventHandlers(): void {
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞
    this.client.on('qr', (qr: string) => {
      console.log('üîê QR –∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ WhatsApp:');
      console.log('üì± –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç QR –∫–æ–¥ —Å –ø–æ–º–æ—â—å—é WhatsApp –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ:');
      console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ WhatsApp –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ');
      console.log('   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ > –°–≤—è–∑–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞');
      console.log('   3. –ù–∞–∂–º–∏—Ç–µ "–°–≤—è–∑–∞—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ"');
      console.log('   4. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥ –Ω–∏–∂–µ:');
      console.log('');
      
      // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å QR –∫–æ–¥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
      try {
        qrcode.generate(qr, { small: true });
      } catch (error) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å QR –∫–æ–¥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ');
      }
      
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä QR –∫–æ–¥–∞
      console.log('');
      console.log('üìã –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è QR –∫–æ–¥–∞:');
      console.log(`https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(qr)}`);
      console.log('');
      console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    this.client.on('message', async (message: Message) => {
      console.log('üîî –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ message –æ—Ç WhatsApp –∫–ª–∏–µ–Ω—Ç–∞');
      await this.handleIncomingMessage(message);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    this.client.on('auth_failure', (msg: string) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ WhatsApp:', msg);
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR –∫–æ–¥ –∑–∞–Ω–æ–≤–æ');
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
    this.client.on('disconnected', (reason: string) => {
      console.log('üì± WhatsApp –∫–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω:', reason);
      
      // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω–∞—Ö
      if (reason === 'LOGOUT' || reason === 'NAVIGATION') {
        console.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º WhatsApp –∫–ª–∏–µ–Ω—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...');
        setTimeout(() => {
          this.restartClient();
        }, 5000);
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Puppeteer
    this.client.on('change_state', (state: string) => {
      console.log('üì± WhatsApp —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:', state);
      this.logClientState();
      
      // –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –Ω–∞ CONNECTED, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
      if (state === 'CONNECTED') {
        setTimeout(() => {
          this.forceSaveSession();
        }, 1000);
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    this.client.on('remote_session_saved', () => {
      console.log('üíæ –°–µ—Å—Å–∏—è WhatsApp —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
    this.client.on('authenticated', () => {
      console.log('‚úÖ WhatsApp –∫–ª–∏–µ–Ω—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      console.log('üîí –°–µ—Å—Å–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ 10 –ª–µ—Ç –±–µ–∑ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∞');
      this.logClientState();
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      setTimeout(() => {
        this.forceSaveSession();
      }, 1000);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–∏
    this.client.on('auth_failure', (msg: string) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ WhatsApp:', msg);
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR –∫–æ–¥ –∑–∞–Ω–æ–≤–æ');
    });

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–Ω–∏—è
    this.client.on('change_state', (state: string) => {
      console.log('üì± WhatsApp —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', state);
      if (state === 'UNPAIRED' || state === 'UNPAIRED_IDLE') {
        console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–Ω–∏–µ, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é...');
        // –ù–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä—É–µ–º
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–µ—Å—Å–∏–π
    this.client.on('remote_session_saved', () => {
      console.log('üíæ –°–µ—Å—Å–∏—è WhatsApp —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–∞ –¥–∏—Å–∫');
      console.log('üîí –°–µ—Å—Å–∏—è –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–∞ 10 –ª–µ—Ç');
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
    this.client.on('qr', (qr: string) => {
      console.log('üîê QR –∫–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω');
    });


    // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
    this.client.on('ready', async () => {
      console.log('‚úÖ WhatsApp –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
      this.logClientState();
      this.restartAttempts = 0;
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      setTimeout(() => {
        this.forceSaveSession();
      }, 2000);

      // –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤, –Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
      try {
        const chats = await this.client.getChats();
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${chats.length} —á–∞—Ç–æ–≤`);
        console.log('üí° –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      } catch (error) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤:', error);
      }
    });

    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫)
    process.on('uncaughtException', (error) => {
      if (error.message.includes('Protocol error') || error.message.includes('Execution context was destroyed')) {
        console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ Puppeteer, –Ω–æ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
        console.log('üí° –û—à–∏–±–∫–∞:', error.message);
      }
    });

    process.on('unhandledRejection', (reason) => {
      if (reason && typeof reason === 'object' && 'message' in reason) {
        const error = reason as Error;
        if (error.message.includes('Protocol error') || error.message.includes('Execution context was destroyed')) {
          console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ Promise (Puppeteer), –Ω–æ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
          console.log('üí° –û—à–∏–±–∫–∞:', error.message);
        }
      }
    });
  }

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫
  setApplicationHandler(handler: (application: Application) => Promise<void>): void {
    console.log('üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫ –≤ WhatsApp —Å–µ—Ä–≤–∏—Å–µ');
    this.onNewApplication = handler;
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', !!this.onNewApplication);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  private async handleIncomingMessage(message: Message): Promise<void> {
    try {
      console.log('üì® –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ WhatsApp:', {
        from: message.from,
        body: message.body,
        type: message.type,
        isStatus: message.isStatus,
        hasMedia: message.hasMedia
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
      if (!this.client) {
        console.log('‚ùå WhatsApp –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return;
      }

      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø –∏ —Å—Ç–∞—Ç—É—Å—ã
      if (message.from.includes('@g.us') || message.isStatus) {
        console.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–≥—Ä—É–ø–ø–∞ –∏–ª–∏ —Å—Ç–∞—Ç—É—Å)');
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
      const contact = await message.getContact();
      const userPhone = contact.number;
      const userName = contact.name || contact.pushname || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      const userMessage = message.body;

      console.log('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', {
        userPhone,
        userName,
        userMessage
      });

      // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É–±—Ä–∞–Ω–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –º–µ–¥–∏–∞
      let messageType: Application['messageType'] = 'text';
      let mediaUrls: string[] = [];

      if (message.hasMedia) {
        try {
          const media = await message.downloadMedia();
          if (media) {
            const mediaUrl = await this.saveMediaFile(media, userPhone);
            if (mediaUrl) {
              mediaUrls.push(mediaUrl);
            }

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞
            if (message.type === 'image') {
              messageType = 'image';
            } else if (message.type === 'video') {
              messageType = 'video';
            } else if (message.type === 'document') {
              messageType = 'document';
            } else if (message.type === 'audio' || message.type === 'ptt') {
              messageType = 'audio';
            }
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞:', error);
        }
      }

      // –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É
      const application: Application = {
        source: 'whatsapp',
        whatsappUserId: userPhone,
        whatsappUserName: userName,
        whatsappUserPhone: userPhone,
        userMessage: userMessage,
        name: userName,
        phone: userPhone,
        messageType: messageType,
        mediaUrls: mediaUrls.length > 0 ? mediaUrls : undefined
      };

      // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∑–∞—è–≤–∫—É –≤ Telegram
      if (this.onNewApplication) {
        console.log('üì§ –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∑–∞—è–≤–∫—É –≤ Telegram...');
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É');
        console.log('üìã –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:', {
          source: application.source,
          userPhone: application.whatsappUserPhone,
          userName: application.whatsappUserName,
          message: application.userMessage
        });
        await this.onNewApplication(application);
        console.log('‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram');
      } else {
        console.log('‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ onNewApplication:', this.onNewApplication);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
      if (!this.thanksMessageSent.has(userPhone)) {
        const thanksText = `–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è`;
        await message.reply(thanksText);
        this.thanksMessageSent.add(userPhone);
        console.log('üí¨ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
        console.log('‚úÖ –ë–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è WhatsApp:', error);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      if (error instanceof Error && 
          (error.message.includes('Protocol error') || 
           error.message.includes('Execution context was destroyed') ||
           error.message.includes('Target closed'))) {
        console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ Puppeteer –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
        console.log('üí° –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –Ω–æ —Å–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
      }
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞
  private async saveMediaFile(media: any, userPhone: string): Promise<string | null> {
    try {
      const timestamp = Date.now();
      const extension = media.mimetype.split('/')[1] || 'bin';
      const filename = `whatsapp_${userPhone}_${timestamp}.${extension}`;
      
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∏–ª–∏ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
      console.log(`–ú–µ–¥–∏–∞ —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${filename}`);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π URL (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL —Ñ–∞–π–ª–∞)
      return `https://your-server.com/media/${filename}`;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞:', error);
      return null;
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  async sendTextMessage(to: string, message: string): Promise<boolean> {
    try {
      const chatId = `${to}@c.us`;
      await this.client.sendMessage(chatId, message);
      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é WhatsApp:', error);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      if (error instanceof Error && 
          (error.message.includes('Protocol error') || 
           error.message.includes('Execution context was destroyed') ||
           error.message.includes('Target closed'))) {
        console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ Puppeteer –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
        console.log('üí° –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –Ω–æ —Å–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
      }
      
      return false;
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  async sendMediaMessage(to: string, mediaUrl: string, mediaType: 'image' | 'video' | 'document' | 'audio', caption?: string): Promise<boolean> {
    try {
      const chatId = `${to}@c.us`;
      const media = await MessageMedia.fromUrl(mediaUrl);
      
      if (caption && (mediaType === 'image' || mediaType === 'video' || mediaType === 'document')) {
        (media as any).caption = caption;
      }
      
      await this.client.sendMessage(chatId, media);
      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é WhatsApp:', error);
      return false;
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–ª–∏–µ–Ω—Ç—É
  async sendManagerReply(reply: ManagerReply): Promise<boolean> {
    if (reply.targetPlatform !== 'whatsapp') {
      return false;
    }

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–æ–π –Ω–∞ Telegram
      if (reply.message) {
        // –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ª–∏—à–Ω–∏—Ö –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ –∏ —Å—Å—ã–ª–æ–∫
        let cleanMessage = reply.message;
        
        // –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ Telegram (https://t.me/...)
        cleanMessage = cleanMessage.replace(/https:\/\/t\.me\/[^\s\n]+/g, '');
        
        // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –∏ –ø—Ä–æ–±–µ–ª—ã
        cleanMessage = cleanMessage.replace(/\n\s*\n/g, '\n').trim();
        
        // –°–æ–∑–¥–∞–µ–º –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É –Ω–∞ Telegram –∞–∫–∫–∞—É–Ω—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        const telegramLink = `https://t.me/${reply.managerUsername.replace('@', '')}`;
        const managerMessage = `${cleanMessage}\n\nüì± –°–≤—è–∑–∞—Ç—å—Å—è –≤ Telegram: ${telegramLink}`;
        await this.sendTextMessage(reply.targetUserId, managerMessage);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
      if (reply.mediaUrls && reply.mediaUrls.length > 0) {
        for (const mediaUrl of reply.mediaUrls) {
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –ø–æ URL –∏–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
          const mediaType = this.getMediaTypeFromUrl(mediaUrl);
          await this.sendMediaMessage(reply.targetUserId, mediaUrl, mediaType);
        }
      }

      console.log(`–û—Ç–≤–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é WhatsApp: ${reply.targetUserId}`);
      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ WhatsApp:', error);
      return false;
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –º–µ–¥–∏–∞ –ø–æ URL
  private getMediaTypeFromUrl(url: string): 'image' | 'video' | 'document' | 'audio' {
    const extension = url.split('.').pop()?.toLowerCase();
    
    if (['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(extension || '')) {
      return 'image';
    } else if (['mp4', 'avi', 'mov', 'wmv', 'flv'].includes(extension || '')) {
      return 'video';
    } else if (['mp3', 'wav', 'ogg', 'm4a'].includes(extension || '')) {
      return 'audio';
    } else {
      return 'document';
    }
  }

  private async restartClient(): Promise<void> {
    try {
      this.restartAttempts++;
      console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ WhatsApp –∫–ª–∏–µ–Ω—Ç–∞ #${this.restartAttempts}`);
      
      if (this.restartAttempts > 3) {
        console.log('‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞');
        return;
      }

      await this.client.destroy();
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      this.client.initialize();
      console.log('‚úÖ WhatsApp –∫–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ WhatsApp –∫–ª–∏–µ–Ω—Ç–∞:', error);
    }
  }


  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
  private logClientState(): void {
    try {
      if (!this.client) {
        console.log('üìä –ö–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return;
      }

      const state = this.client.getState();
      const info = this.client.info;
      
      console.log('üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ WhatsApp –∫–ª–∏–µ–Ω—Ç–∞:', {
        state: state,
        isReady: info ? '–î–∞' : '–ù–µ—Ç',
        hasPage: this.client.pupPage && !this.client.pupPage.isClosed() ? '–î–∞' : '–ù–µ—Ç',
        timestamp: new Date().toISOString()
      });
    } catch (error) {
      console.log('üìä –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞:', error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
  private async forceSaveSession(): Promise<void> {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤
      if (!this.client) {
        console.log('üìä –ö–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏');
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
      const state = this.client.getState();
      if (state !== 'CONNECTED' && state !== 'OPENING') {
        console.log(`üìä –ö–ª–∏–µ–Ω—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω (—Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${state}), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏`);
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      if (!this.client.pupPage || this.client.pupPage.isClosed()) {
        console.log('üìä –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏');
        return;
      }

      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
      await this.client.pupPage.evaluate(() => {
        try {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –≤ localStorage
          if (window.localStorage) {
            window.localStorage.setItem('wwebjs_session_saved', Date.now().toString());
            window.localStorage.setItem('wwebjs_session_duration', '315360000000'); // 10 –ª–µ—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
            window.localStorage.setItem('wwebjs_session_configured', 'true');
          }
        } catch (e) {
          console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ localStorage:', e);
        }
      });
      
      console.log('üíæ –°–µ—Å—Å–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
    } catch (error) {
      // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–æ–π —Å–µ—Å—Å–∏–∏
      if (error instanceof Error && !error.message.includes('Session closed') && !error.message.includes('Target closed')) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é:', error.message);
      }
    }
  }

  // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
  start(): void {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WhatsApp –∫–ª–∏–µ–Ω—Ç–∞...');
    console.log('üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π —Å–µ—Å—Å–∏–∏ (10 –ª–µ—Ç)...');
    
    this.client.initialize();
    console.log('‚úÖ WhatsApp –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setInterval(() => {
      this.forceSaveSession();
      this.logClientState();
    }, 5 * 60 * 1000); // –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

  }


  // –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  clearThanksHistory(): void {
    this.thanksMessageSent.clear();
    console.log('üßπ –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—á–∏—â–µ–Ω–∞');
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
  stop(): void {
    if (this.client) {
      this.client.destroy();
      console.log('WhatsApp –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
  }
}